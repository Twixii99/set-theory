<!-- this code if you use sublime text editor -->
<!-- you can modify it by make each each snippet tag in a file and and save it as "name.sublime-snippt" in sublime config file -->
<snippet>
	<content><![CDATA[
void ${1:/intersection/union/difference/} (int ${2:para1}, int ${3:para2}, string ${4:universal_arr}[]) {
	for(int ${5:para}; ${5/\*//} < ${6:universal_set_size}; ++${5/\*//})
		if(${4/\*//}[${2/\*//}][${5/\*//}] && arr[${2/\*//}][${5/\*//}]) cout << ${4/\*//}[${5/\*//}] << " ";
    cout << "\n\n";
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>opefun</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope> -->
</snippet>

<snippet>
	<content><![CDATA[
if(${1:/*condition*/}) {
	${2:/*code*/}
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>if</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope> -->
</snippet>

<snippet>
	<content><![CDATA[
for(int ${1:para}; ${1/\*//} < ${2:count}; ++${1/\*//}) {
	${3:/*code*/}
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>fl</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope> -->
</snippet>

<snippet>
	<content><![CDATA[
cout << ${1:/*Enter your warning massage*/};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>warmass</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope> -->
</snippet>

<snippet>
	<content><![CDATA[
case '${1:char}': {
	${2:/*code*/}
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>cse</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope> -->
</snippet>
